#!/usr/bin/env python

import time
import os
import subprocess
import re
import phatbeat
from mpd import MPDClient

class SimpleClient:
    def __init__(self):
        client = MPDClient()
        client.timeout = 10
        client.connect("localhost", 6600)
        self.client = client

    def status(self, property):
        return self.client.status()[property]

    def volume(self, change=None):
        if(change):
            new_volume = int(self.status('volume')) + change
            self.client.setvol(new_volume)
        return int(self.status('volume'))

    def is_playing(self):
        return self.status('state') == 'play'

    def play_pause(self):
        if not self.client.playlist():
            print('load "default" playlist')
            self.client.load('default')
        if self.is_playing():
            print('pause')
            self.client.stop()
        else:
            print('play')
            self.client.play()

class VU:
    def bar(self, value, max_value):
        last_command_time = time.time()
        level = min(7, int(round(7*(float(value)/max_value))))
        phatbeat.clear()
        for x in range(0, level):
            phatbeat.set_pixel(7 - x, 255, 255, 255, brightness=0.1, channel=0)
            phatbeat.set_pixel(x, 255, 255, 255, brightness=0.1, channel=1)
        phatbeat.show()

if __name__ == "__main__":
    vu = VU()
    client = SimpleClient()

    @phatbeat.on(phatbeat.BTN_VOLUP)
    def volume_up(pin):
        print(client.volume(+3))
        vu.bar(client.volume(), 50)

    @phatbeat.on(phatbeat.BTN_VOLDN)
    def volume_down(pin):
        print(client.volume(-3))
        vu.bar(client.volume(), 50)

    @phatbeat.on(phatbeat.BTN_PLAYPAUSE)
    def play_pause(pin):
        print(client.play_pause())

    try:
        while True:
            time.sleep(0.1)

    except KeyboardInterrupt:
        pass
